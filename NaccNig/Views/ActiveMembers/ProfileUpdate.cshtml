@using Microsoft.AspNet.Identity
@model NaccNigModels.Members.ActiveMember

@{
    /**/

    ViewBag.Title = "Profile Update";
    Layout = "~/Views/Shared/Default.cshtml";

}
@section Scripts{
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $.get("/ActiveMembers/GetStateChapterList/", function (data) {
                var items = "<option>---- State Chapter ----</option>";
                $.each(data, function (index, row) {
                    items += " <option value='" + row.StateChapId + "'>" + row.StateChapterName + "</option>";
                    $("#StateChapterId").html(items);
                    //$("#StateChapterId").append(" <option value='" + row.StateChapId + "'>" + row.StateChapterName + "</option>")
                });
            });
            $("#StateChapterId").change(function () {
                $.get("/ActiveMembers/GetZoneList/", { StateChapId: $("#StateChapterId").val() }, function (data) {
                    var items = "<option>---- zonal chapters ----</option>";
                    $.each(data, function (index, row) {
                        items += "<option value='" + row.Value + "'>" + row.Text + "</option>";
                        $("#ZoneId").html(items);
                        //$("#ZoneId").append("<option value='" + row.ZId + "'>" + row.ZoneName + "</option>")
                    });
                });
            });
        });
        $(document).ready(function () {

            $("#positionLabel").hide();
            $("#Position").hide();
            $("#DateServedLabel").hide();
            $("#DateServed").hide();



            $("#IsExco").on("click", function (e) {

                $("#positionLabel").slideToggle();
                $("#Position").slideToggle();
                $("#DateServedLabel").slideToggle();
                $("#DateServed").slideToggle();
                e.preventDefault();
            });

        });
    </script>
}

<div class="section-body">
    <div class="row">
        <div class="col-md-10 col-md-offset-1">
            @using (Html.BeginForm("ProfileUpdate", "ActiveMembers", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">

                    <hr />


                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    <div class="form-group">
                        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <input type="file" name="ImageFile" value="" />
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Middlename, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("Gender", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StateOfOrigin, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("StateOfOrigin", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.StateChapterId, "State Chapter", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.StateChapterId, ViewBag.StateList as SelectList, "Select State Chapter", htmlAttributes: new { id = "StateChapterId", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StateChapterId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.ZoneId, new SelectList(" "), "Select Zonal Chapter", htmlAttributes: new { id = "ZoneId", @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.IsExco, "Are you An Exco?", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.IsExco)
                            @Html.ValidationMessageFor(model => model.IsExco, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Position, htmlAttributes: new { id = "positionLabel", @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.DateServed, "Year of Service", htmlAttributes: new { id = "DateServedLabel", @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateServed, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateServed, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CallUpNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CallUpNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CallUpNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Update" class="btn btn-info" />
                        </div>
                    </div>
                </div>
            }



        </div>
    </div>

</div>
