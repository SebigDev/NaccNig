@using Microsoft.AspNet.Identity
@using NaccNig.Extension
@model NaccNigModels.Members.ActiveMember

@{
                /**/

                ViewBag.Title = "Profile Update";
                Layout = "~/Views/Shared/DashboardLayout.cshtml";
}
@section Scripts{
    <script src="~/Scripts/bootstrap.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            $("#ProvinceId").change(function () {
                $.get("/ActiveMembers/GetStateChapterList", { ProId: $("#ProvinceId").val() }, function (data) {
                    var items = "<option>---- state chapters ----</option>";
                    $.each(data, function (index, row) {
                        items += " <option value='" + row.StateChapId + "'>" + row.StateChapterName + "</option>";
                        $("#StateChapterId").html(items);
                        //$("#StateChapterId").append(" <option value='" + row.StateChapId + "'>" + row.StateChapterName + "</option>")
                    });
                });
            });

            $("#StateChapterId").change(function () {
                $.get("/ActiveMembers/GetZoneList", { StateChapId: $("#StateChapterId").val() }, function (data) {
                    var items = "<option>---- zonal chapters ----</option>";
                    $.each(data, function (index, row) {
                        items += "<option value='" + row.ZId + "'>" + row.ZoneName + "</option>";
                        $("#ZoneId").html(items);
                        //$("#ZoneId").append("<option value='" + row.ZId + "'>" + row.ZoneName + "</option>")
                    });
                });
            });
        });
    </script>
    }

    <div id="content">
        <section>
            <div class="section-body">
                <div class="row">
                    <div class="col-md-8 col-md-offset-2">
                        @using (Html.BeginForm("Update", "ActiveMembers", new { id = Model.ActiveMemberId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <hr />


                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                            <div class="form-group">
                                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                                <input type="file" name="ImageFile" value="" />
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Middlename, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("Gender", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StateOfOrigin, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("StateOfOrigin", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">

                                @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @if (ViewBag.MyList != null)
                             {
                                        @Html.DropDownListFor(model => model.ProvinceId, ViewBag.MyList as SelectList, "Select Province", htmlAttributes: new { id = "ProvinceId", @class = "form-control" })
                            }
                                    @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
                                </div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StateChapterId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.StateChapterId, new SelectList(" "), "Select State Chapter", htmlAttributes: new { id = "StateChapterId", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StateChapterId, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ZoneId, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownListFor(model => model.ZoneId, new SelectList(" "), "Select Zonal Chapter", htmlAttributes: new { id = "ZoneId", @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ZoneId, "", new { @class = "text-danger" })
                                </div>
                            </div>




                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StateOfDeployment, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("StateOfDeployment", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.StateOfDeployment, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.CallUpNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.CallUpNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.CallUpNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Update" class="btn btn-info" />
                                </div>
                            </div>
                        </div>
                        }
                    </div>
                </div>
            </div>
        </section>
    </div>
   

