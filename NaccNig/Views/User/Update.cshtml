@using NaccNig.Models
@model NaccNig.ViewModels.EditUserViewModel

@{
    ViewBag.Title = "Edit";
    if (User.IsInRole(RoleName.Admin)) { Layout = "~/Views/Shared/DashboardLayout.cshtml"; }
    else { Layout = "~/Views/Shared/Default.cshtml"; }
}
<br />
<br />

    <div id="content">
        <section>
            <div class="section-body">
                <div class="row">
                    <div class="col-md-8 col-md-offset-2">
                        @using (Html.BeginForm("Update", "User", new { id = Model.ActiveMemberId }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">

                        <hr />


                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                        @if (User.IsInRole(RoleName.Admin))
                        {

                    <div class="form-group">
                        @Html.LabelFor(m => m.User.Email, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.User.Email, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.User.UserName, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.User.UserName, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label col-sm-4" })
                        <div class="col-sm-4">
                            @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control" })
                        </div>
                    </div>
                        }

                        else
                        {
                        <div class="form-group">
                            @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <input type="file" name="ImageFile" value="@Model.Photo" />
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Middlename, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Middlename, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Middlename, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("Gender", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Dob, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.StateOfOrigin, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("StateOfOrigin", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.StateOfOrigin, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>



                        <div class="form-group">
                            @Html.LabelFor(model => model.StateCode, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.StateCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.StateCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CallUpNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.CallUpNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.CallUpNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        }

                        <div class="form-group">
                            @for (int i = 0; i < Model.Roles.Count; i++)
        {
                    <div class="col-sm-offset-4 col-sm-4">
                        @Html.HiddenFor(m => m.Roles[i].Name)
                        @Html.CheckBoxFor(m => m.Roles[i].IsSelected)
                        @Model.Roles[i].Name
                    </div>
}
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Update" class="btn btn-info" />
                            </div>
                        </div>
                    </div>
}
                    </div>
                </div>
            </div>
        </section>
    </div>
